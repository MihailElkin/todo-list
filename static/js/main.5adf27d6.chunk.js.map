{"version":3,"sources":["components/task.js","components/newTask.js","components/taskList.js","components/modal.js","data/taskStore.js","components/taskDB.js","App.js","reportWebVitals.js","index.js"],"names":["Task","props","useState","taskText","setText","edit","setEdit","className","task","done","readonly","type","checked","onChange","doneTask","id","list","setSave","onSubmit","event","console","log","preventDefault","editTask","text","placeholder","value","target","name","onClick","removeTask","NewTask","setTask","new","TaskList","isSave","useEffect","localStorage","removeItem","setItem","JSON","stringify","store","taskArray","map","kay","taskArrayDone","head","cancel","Modal","newList","document","getElementById","classList","remove","add","listName","removeList","initialStore","DBData","getItem","parse","taskStore","createStore","state","action","UpDB_new","payload","listId","push","length","UpDB_rem","filter","item","UpDB_done","tsk","UpDB_edit","UpDB_NL","header","color","UpDB_RL","UpDB_cancel","Home","arr","mapDispathToProps","newTask","connect","tasks","typeModal","setTypeModal","headModal","setHeadModal","textModal","setTextModal","idModal","setIDModal","navArray","to","infoArray","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5adf27d6.chunk.js","sourcesContent":["import React, { useState} from 'react';\r\nfunction Task(props) {\r\n    const [taskText, setText] = useState(\"\")\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    function handlerChage(event) {\r\n        const value = event.target.value\r\n        setText(value)\r\n    }\r\n    function handlerSubmit(event) {\r\n        console.log(taskText)\r\n        event.preventDefault()\r\n        props.editTask({ id: props.task.id, text: taskText, done: props.task.done }, props.list)\r\n        setEdit(!edit)\r\n\r\n    }\r\n\r\n    return (\r\n        <li className={props.task.done ? \"doneTask\" : \"\"}>\r\n            {props.readonly ? \"\" : <input\r\n                type=\"checkbox\"\r\n                checked={props.task.done}\r\n                onChange={() => {\r\n                    props.doneTask(\r\n                        props.task.id, props.list)\r\n                        props.setSave(false)\r\n                }} />}\r\n            {edit ? <form onSubmit={handlerSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Задача\"\r\n                    value={taskText}\r\n                    onChange={handlerChage}\r\n                    name=\"text\"\r\n                />\r\n                <input type=\"submit\" value=\"ok\" />\r\n            </form> : props.task.text}\r\n            {props.readonly ? \"\" : <button className=\"editButton\" onClick={() => { setEdit(!edit); setText(props.task.text) }} >🖍</button>}\r\n            {props.readonly ? \"\" : <button className=\"deleteButton\" onClick={() => props.removeTask(props.task.id, props.list)}>✖</button>}\r\n\r\n        </li>\r\n    )\r\n}\r\nexport default Task","import React, { useState} from 'react';\r\nfunction NewTask(props){\r\n    const [taskText,setTask] = useState(true)\r\n    function handlerChage(event) {\r\n        const value = event.target.value\r\n        setTask(value)\r\n       \r\n    }\r\n    function handlerSubmit(event){\r\n        event.preventDefault()\r\n        props.new(taskText,props.list)\r\n        props.setSave(false)\r\n    }\r\n    return (\r\n        <form onSubmit={handlerSubmit}>\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Задача\"\r\n            onChange={handlerChage}\r\n            name=\"text\"\r\n        />\r\n         <input type=\"submit\" value=\"+\" />\r\n        </form>\r\n    )\r\n}\r\nexport default NewTask","import React, { useState, useEffect } from \"react\"\r\nimport Task from \"./task\"\r\nimport NewTask from \"./newTask\"\r\nfunction TaskList(props) {\r\n    const [isSave, setSave] = useState(true)\r\n    useEffect(() => {\r\n        if (!props.readonly) {\r\n            localStorage.removeItem(props.id)\r\n            localStorage.setItem(props.id, JSON.stringify(props.store))\r\n            console.log(\"effect\")\r\n        }\r\n    }, [])\r\n    var taskArray = props.store.map((task) => task.done ? \"\" : <Task setSave={setSave} kay={task.id} task={task} doneTask={props.doneTask} removeTask={props.removeTask} editTask={props.editTask} readonly={props.readonly} list={props.kay} />)\r\n    var taskArrayDone = props.store.map((task) => task.done ? <Task setSave={setSave} kay={task.id} task={task} doneTask={props.doneTask} removeTask={props.removeTask} editTask={props.editTask} readonly={props.readonly} list={props.kay} /> : \"\")\r\n    return (\r\n        <div >\r\n            {props.readonly ? \"\" :<h3>{props.head}</h3>}\r\n            <ol>\r\n                {taskArray}\r\n                {taskArrayDone}\r\n            </ol>\r\n            {props.readonly ? \"\" : <NewTask setSave={setSave} new={props.new} list={props.kay} />}\r\n            {isSave|| props.readonly ? \"\" : <button onClick={() => {\r\n                setSave(true)\r\n                localStorage.removeItem(props.id)\r\n                localStorage.setItem(props.id, JSON.stringify(props.store))\r\n            }\r\n\r\n            }>Сохранить</button>}\r\n            {isSave|| props.readonly ? \"\" : <button onClick={() => {\r\n                props.cancel(props.kay)\r\n                setSave(true)\r\n            }}>Отмена</button>}\r\n        </div>\r\n    )\r\n}\r\nexport default TaskList","import React, { useState, useEffect } from \"react\"\r\nfunction Modal(props) {\r\n    const [text, setText] = useState('')\r\n\r\n\r\n    function handlerChage(event) {\r\n        const value = event.target.value\r\n        setText(value)\r\n\r\n    }\r\n    function handlerSubmit(event) {\r\n        event.preventDefault()\r\n        props.newList(text)\r\n        document.getElementById(\"modal\").classList.remove(\"modalShow\")\r\n        document.getElementById(\"modal\").classList.add(\"modalHide\")\r\n    }\r\n    return (\r\n        <div id=\"modal\" className=\"modalHide\">\r\n            <div className=\"modal\">\r\n                <div className=\"modalHead\">{props.head}</div>\r\n                {props.type == \"newList\" ? <form onSubmit={handlerSubmit}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Имя заметки\"\r\n                        onChange={handlerChage}\r\n                        name=\"text\"\r\n                    />\r\n                    <br /><input type=\"submit\" value=\"Ok\" />\r\n                    <input type=\"button\" value=\"Отмена\" onClick={() => {\r\n                        document.getElementById(\"modal\").classList.remove(\"modalShow\")\r\n                        document.getElementById(\"modal\").classList.add(\"modalHide\")\r\n                    }} />\r\n                </form> : \"\"\r\n                }\r\n                {props.type == \"removeList\" ? <div><h5>Удалить заметку {props.listName}</h5>\r\n                <button onClick={() => {\r\n                       props.removeList(props.id)\r\n                        document.getElementById(\"modal\").classList.remove(\"modalShow\")\r\n                        document.getElementById(\"modal\").classList.add(\"modalHide\")}}>Да</button>\r\n                <button onClick={() => {\r\n                        document.getElementById(\"modal\").classList.remove(\"modalShow\")\r\n                        document.getElementById(\"modal\").classList.add(\"modalHide\")\r\n                    }}>Нет</button></div> : \"\"\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Modal","import { createStore } from \"redux\"\r\n\r\nconst initialStore = {\r\n    DBData: localStorage.getItem(\"todoStore\")? JSON.parse(localStorage.getItem(\"todoStore\")) : []\r\n};\r\nexport function newTask(text, listId) {\r\n    return {\r\n        type: \"NEW_TASK\",\r\n        payload: { text: text, listId: listId }\r\n    }\r\n\r\n}\r\nexport function editTask(task, listId) {\r\n    return {\r\n        type: \"EDIT_TASK\",\r\n        payload: { task: task, listId: listId }\r\n    }\r\n}\r\nexport function removeTask(id, listId) {\r\n    return {\r\n        type: \"REMOVE_TASK\",\r\n        payload: { id: id, listId: listId }\r\n    }\r\n}\r\nexport function doneTask(id, listId) {\r\n    return {\r\n        type: \"DONE_TASK\",\r\n        payload: { id: id, listId: listId }\r\n    }\r\n}\r\n\r\n\r\nexport function newList(header) {\r\n    return {\r\n        type: \"NEW_LIST\",\r\n        payload: header\r\n    }\r\n}\r\nexport function removeList(listId) {\r\n    return {\r\n        type: \"REMOVE_LIST\",\r\n        payload: listId\r\n    }\r\n}\r\nexport function cancel(listId) {\r\n    return {\r\n        type: \"CANCEL\",\r\n        payload: listId\r\n    }\r\n}\r\nfunction reduser(state = initialStore, action) {\r\n\r\n    switch (action.type) {\r\n        case \"NEW_TASK\":\r\n            const UpDB_new = state.DBData.map(task => {\r\n                if (task.id == action.payload.listId) {\r\n                    task.store.push({ text: action.payload.text, id: task.store.length != 0 ? task.store[task.store.length - 1].id + 1 : 0, done: false })\r\n                    return task\r\n                }\r\n                else { return task }\r\n            })\r\n            return { DBData: UpDB_new }\r\n\r\n        case \"REMOVE_TASK\":\r\n            const UpDB_rem = state.DBData.map(task => {\r\n                if (task.id == action.payload.listId) {\r\n                    return { ...task, store: task.store.filter(item => item.id != action.payload.id) }\r\n                }\r\n                else { return task }\r\n            })\r\n            return { DBData: UpDB_rem }\r\n\r\n        case \"DONE_TASK\":\r\n            const UpDB_done = state.DBData.map(task => {\r\n                if (task.id == action.payload.listId) {\r\n                    return {\r\n                        ...task, store: task.store.map(tsk => {\r\n                            if (tsk.id == action.payload.id) {\r\n                                return {\r\n                                    ...tsk,\r\n                                    done: !tsk.done\r\n                                }\r\n                            }\r\n                            else { return tsk }\r\n                        })\r\n                    }\r\n                }\r\n                else { return task }\r\n            })\r\n            return { DBData: UpDB_done }\r\n        case \"EDIT_TASK\":\r\n            const UpDB_edit = state.DBData.map(task => {\r\n                if (task.id == action.payload.listId) {\r\n                    return {\r\n                        ...task, store: task.store.map(tsk => {\r\n                            if (tsk.id == action.payload.task.id) {\r\n                                return {\r\n                                    ...tsk,\r\n                                    text: action.payload.task.text\r\n                                }\r\n                            }\r\n                            else { return tsk }\r\n                        })\r\n                    }\r\n                }\r\n                else { return task }\r\n            })\r\n            return { DBData: UpDB_edit }\r\n        case \"NEW_LIST\":\r\n            const UpDB_NL =state.DBData.map(task => { return task })\r\n            UpDB_NL.push({ header: action.payload, id: state.DBData.length != 0 ? state.DBData[state.DBData.length - 1].id + 1 : 0, store: [], color: \"white\" })\r\n            return { DBData: UpDB_NL }\r\n        case \"REMOVE_LIST\":\r\n            const UpDB_RL = state.DBData.filter(item => item.id != action.payload)\r\n            return { DBData: UpDB_RL }\r\n        case \"CANCEL\":\r\n            const UpDB_cancel = state.DBData.map(task => {\r\n                if (task.id == action.payload) {\r\n                    return { ...task, store: JSON.parse(localStorage.getItem(action.payload)) }\r\n                }\r\n                else { return task }\r\n            })\r\n            return { DBData: UpDB_cancel }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst taskStore = createStore(reduser)\r\nexport default taskStore","import React, { useState} from \"react\"\r\n    import TaskList from \"./taskList\"\r\n    import Modal from \"./modal\"\r\nimport { connect } from \"react-redux\"\r\nimport { newTask, removeTask, doneTask, editTask, removeList, newList, cancel } from \"../data/taskStore\"\r\nimport {BrowserRouter,Switch, Route, Link} from \"react-router-dom\";\r\nfunction TaskDB(props) {\r\n    localStorage.setItem(\"todoStore\", JSON.stringify(props.tasks))\r\n    const [typeModal, setTypeModal] = useState('')\r\n    const [headModal, setHeadModal] = useState('')\r\n    const [textModal, setTextModal] = useState('')\r\n    const [idModal, setIDModal] = useState('')\r\n\r\n    const navArray = props.tasks.map(task => {\r\n        return (\r\n            <div key={task.id} className=\"list\">\r\n                <div className=\"deleteButtonConteiter\"> <button className=\"deleteButton\" onClick={() => {setTypeModal(\"removeList\")\r\n                                    setHeadModal(\"Подтверждение удаления\")\r\n                                    setTextModal(task.header)\r\n                                    setIDModal(task.id)\r\n                                    document.getElementById(\"modal\").classList.add(\"modalShow\")\r\n                                    document.getElementById(\"modal\").classList.remove(\"modalHide\")\r\n                        }}>✖</button></div>\r\n                <Link to={\"/\" + task.id}>{task.header}<TaskList head={task.header} kay={task.id} store={task.store} readonly={true} /></Link>\r\n                \r\n            </div>\r\n        )\r\n    })\r\n\r\n    const infoArray = props.tasks.map(task => {\r\n        return (\r\n            <Route key={task.id} path={\"/todo-list/\" + task.id}>\r\n                <nav>\r\n                    <Link to=\"/todo-list\">Назад</Link>\r\n                </nav>\r\n                <TaskList head={task.header} kay={task.id} id={task.id}  store={task.store} readonly={false} cancel={props.cancel} new={props.newTask} doneTask={props.doneTask} removeTask={props.removeTask} editTask={props.editTask} />\r\n            </Route>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <div>\r\n\r\n\r\n                    <Switch>\r\n                        {infoArray}\r\n                        <Route path=\"/todo-list\">  <Modal type={typeModal} head={headModal} listName={textModal} id={idModal} removeList={props.removeList} newList={props.newList}/> <Home arr={navArray} /> \r\n                        <button onClick={() => {setTypeModal(\"newList\")\r\n                                    setHeadModal(\"Создать заметку\")\r\n                                    document.getElementById(\"modal\").classList.add(\"modalShow\")\r\n                                    document.getElementById(\"modal\").classList.remove(\"modalHide\")\r\n                        }}>+</button></Route>\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n           \r\n        </div>\r\n    )\r\n}\r\nfunction Home(props) {\r\n    return (<nav>\r\n        <div>\r\n            {props.arr}\r\n        </div>\r\n      \r\n    </nav>)\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { tasks: state.DBData }\r\n}\r\nconst mapDispathToProps = {\r\n    newTask: newTask,\r\n    removeTask: removeTask,\r\n    doneTask: doneTask,\r\n    editTask: editTask,\r\n    removeList: removeList,\r\n    newList: newList,\r\n    cancel: cancel\r\n}\r\nexport default connect(mapStateToProps, mapDispathToProps)(TaskDB)","\nimport './App.css';\nimport TaskDB from './components/taskDB'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <TaskDB/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\"\nimport taskStore from \"./data/taskStore\"\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={taskStore}>\n     <App />\n     </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}